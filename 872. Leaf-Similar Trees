/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void fun(TreeNode* root,vector<int>&v){
        if(root == NULL)return;
        if(root->left == NULL and root->right == NULL)v.emplace_back(root->val);
        fun(root->left,v);
        fun(root->right,v);
    }

    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        if(root1==NULL and root2==NULL)return true;
        if((root1==NULL and root2!=NULL)or(root1!=NULL and root2==NULL))return false;
        vector<int>v1;
        vector<int>v2;
        fun(root1,v1);
        fun(root2,v2);
        if(v1==v2)return true;
        return false;
    }
};
